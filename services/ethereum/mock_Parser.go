// Code generated by mockery v2.42.3. DO NOT EDIT.

package ethereum

import mock "github.com/stretchr/testify/mock"

// MockParser is an autogenerated mock type for the Parser type
type MockParser struct {
	mock.Mock
}

// GetCurrentBlock provides a mock function with given fields:
func (_m *MockParser) GetCurrentBlock() int {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetCurrentBlock")
	}

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// GetTransactions provides a mock function with given fields: address
func (_m *MockParser) GetTransactions(address string) []Transaction {
	ret := _m.Called(address)

	if len(ret) == 0 {
		panic("no return value specified for GetTransactions")
	}

	var r0 []Transaction
	if rf, ok := ret.Get(0).(func(string) []Transaction); ok {
		r0 = rf(address)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]Transaction)
		}
	}

	return r0
}

// Subscribe provides a mock function with given fields: address
func (_m *MockParser) Subscribe(address string) bool {
	ret := _m.Called(address)

	if len(ret) == 0 {
		panic("no return value specified for Subscribe")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(address)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// NewMockParser creates a new instance of MockParser. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockParser(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockParser {
	mock := &MockParser{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
